@page "/"
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<MudGrid>
    <MudItem xs="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
                    <ActivatorContent>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CloudUpload">Upload Files</MudButton>
                    </ActivatorContent>
                </MudFileUpload>
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Generate</MudButton>
            </MudPaper>        
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                <MudImage Src="@imagePath"></MudImage>
            </MudPaper>
    </MudItem>
</MudGrid>


@if (_files != null) {
    <MudText Typo="@Typo.h6">@_files.Count() File@(_files.Count() == 1 ? "" : "s"):</MudText>
    <MudList T="string">
        @foreach (var file in _files) {
            <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                @file.Name <code>@file.Size bytes</code>
            </MudListItem>
        }
        </MudList>
}

@code{
    IList<IBrowserFile> _files = new List<IBrowserFile>();
    string? imagePath = string.Empty;
    private void UploadFiles(IBrowserFile file)
    {
        _files.Add(file);


        //TODO upload the files to the server
    }
    protected override async Task OnInitializedAsync(){
    }

}